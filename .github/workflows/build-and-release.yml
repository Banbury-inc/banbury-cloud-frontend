name: Build and Release

on:
  push:
    branches:
      - main  # Triggers the workflow on every push to the main branch

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --force

      - name: Build the app
        run: npm run build

      - name: Package with Electron Builder
        run: npm run deploy
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}  # Only if you have a code-signing certificate
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Set GH_TOKEN to avoid token error in electron-builder

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: packages/**/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download MacOS Artifacts (if applicable)
        if: matrix.os == 'macos-latest'
        uses: actions/download-artifact@v3
        with:
          name: macos-latest-artifacts
          path: ./dist/macos

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-latest-artifacts
          path: ./dist/windows

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest-artifacts
          path: ./dist/linux

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/macos/*
            ./dist/windows/*
            ./dist/linux/*
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
