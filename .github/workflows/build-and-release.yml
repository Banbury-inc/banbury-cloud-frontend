name: Build and Release

on:
  push:
    branches:
      - main  # Triggers the workflow on every push to the main branch

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # Add Windows support
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --force

      - name: Build the app
        run: npm run build

      - name: Package with Electron Builder
        run: npm run deploy
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Set GH_TOKEN to avoid token error in electron-builder

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: packages/**/*
          
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history for tagging

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest-artifacts
          path: ./dist/linux

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-latest-artifacts
          path: ./dist/windows

      - name: Download macos Artifacts
        uses: actions/download-artifact@v3
        with:
          name: macos-latest-artifacts
          path: ./dist/macos

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Create and push a new tag
        env:
          VERSION: ${{ env.VERSION }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v$VERSION"
          git push https://$PAT@github.com/${{ github.repository }} "v$VERSION"
      - name: Notarize the App
        run: node scripts/notarize.ts
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          files: |
            ./dist/linux/*
            ./dist/windows/*.exe
            ./dist/macos/*.dmg
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
